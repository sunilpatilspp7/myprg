#include<bits/stdc++.h>
using namespace std;

void bfs(int src,vector<list<int>> graph){
    vector<bool> visited(graph.size(),false);
    queue<int> Q;
    Q.push(src);
    visited[src]=true;
    
    while(!Q.empty()){
        int vertex=Q.front();Q.pop();
        
        list<int>::iterator itr;
        
        for (itr=graph[vertex].begin();itr!=graph[vertex].end();itr++) {
            if(!visited[*itr])
                Q.push(*itr);
            visited[*itr]=true;
            
        }
    }
}


int main(){
    vector<list<int>> graph;
    int v,e,src,des;
    cin >> v >> e;
    graph.resize(v);
    while(e--){
        cin>>src>>des;
        graph[src].push_back(des);
        graph[des].push_back(src);
    }
    
     cin >> src;
     bfs(src,graph);
     
    
    
    return 0;
}
